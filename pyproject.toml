[tool.poetry]
name = "tumorclass.info"
version = "0.0.0"
description = "Classification of MRI images of Brain Tumor to help the medical doctors in analyzing and interpreting the MRI images. Due to the increased disease rates in humans, the need for an Automated Disease Diagnosis (ADD) systems is also raised. Most of the ADD systems are proposed to support the doctor during the screening and decision making process. This research aims at developing a Computer Aided Disease Diagnosis (CADD) scheme to categorize the brain tumor of 2D MRI slices into Glioblastoma/Glioma class with better accuracy. The idea is to develop a CADD system with Convolutional-Neural-Network (CNN) supported segmentation and classification."
authors = ["Lewi Uberg <lewiuberg@icloud.com>"]


[tool.poetry.dependencies]
python = ">=3.9.7,<3.10"
# tensorflow = "^2.7.0"
tensorflow-metal = "^0.4.0"
tensorflow-macos = "^2.8.0"
Pillow = "^9.1.0"
keras = "^2.7.0"
numpy = "^1.22.3"
pandas = "^1.3.5"
scikit-learn = "^1.0.1"
scikit-image = "^0.19.1"
matplotlib = "^3.5.1"
ipykernel = "^6.6.0"
pyconfs = "^0.5.5"
pydicom = "^2.2.2"
pypng = "^0.0.21"
seaborn = "^0.11.2"
pycm = "^3.3"
Theano = "^1.0.5"
keras-sequential-ascii = "^0.1.1"
ann_visualizer = "^2.5"
graphviz = "^0.19.1"
pydot = "^1.4.2"
opencv-python = "^4.5.5"
# shap = "^0.40.0"
image-classifiers = "^1.0.0"
Flask = "2.0.3"
fastapi = "^0.75.1"
uvicorn = "^0.17.6"
python-multipart = "^0.0.5"
Jinja2 = "^3.1.1"
confprint = "^0.5.1"
aiofiles = "^0.8.0"


[tool.poetry.dev-dependencies]
peodd = "^0.4.0"  # Usage: poetry run peodd -o requirements-dev.txt
pytest = "^6.2.5"
pytest-cov = "^3.0.0"
pytest-sugar = "^0.9.4"
debugpy = "^1.5.1"
black = "^21.12b0"
flake8 = "^4.0.1"
isort = "^5.10.1"
mypy = "^0.920"
pydocstyle = "^6.1.1"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 79
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | tests/.*/setup.py
)/
'''

[tool.isort]
profile = "black"
line_length = 79
float_to_top = true
lines_between_types = 0
lines_between_sections = 1
lines_after_imports = 2
force_single_line = false
use_parentheses = true
include_trailing_comma = true
# May be added later: https://pycqa.github.io/isort/docs/configuration/options.html#skip-glob
# src_paths = ["poetry", "tests"]
# skip_glob = ["*/setup.py"]
# filter_files = true
# atomic = true
# known_first_party = "poetry"

[tool.pytest.ini_options]
addopts = "-v"
python_files = "test_*.py"

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "if TYPE_CHECKING:"
]

[env]
classes = ["normal", "lgg", "hgg"]
width = 224
height = 224
